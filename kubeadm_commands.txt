# Update and upgrade
sudo apt-get update && sudo apt-get upgrade -y

# Set hostname (run different names on each node)
sudo hostnamectl set-hostname master   # on master node
sudo hostnamectl set-hostname worker1  # on worker1
sudo hostnamectl set-hostname worker2  # on worker2

# Add entries to /etc/hosts for name resolution
sudo vim /etc/hosts
#---add the following lines---
<private_ip_master> master
<private_ip_worker1> worker1
<private_ip_worker2> worker2

# Disable swap (Kubernetes doesn't support swap)
sudo swapoff -a
sudo sed -i '/ swap / s/^/#/' /etc/fstab

# Enable kernel modules
sudo modprobe overlay
sudo modprobe br_netfilter

# Configure sysctl
cat <<EOF | sudo tee /etc/sysctl.d/kubernetes.conf
net.bridge.bridge-nf-call-iptables = 1
net.ipv4.ip_forward = 1
net.bridge.bridge-nf-call-ip6tables = 1
EOF
sudo sysctl --system



#Install container runtime (containerd)
# Install dependencies
sudo apt-get install -y apt-transport-https ca-certificates curl software-properties-common

# Install containerd
sudo apt-get install -y containerd

# Configure containerd
sudo mkdir -p /etc/containerd
containerd config default | sudo tee /etc/containerd/config.toml

# Set Systemd cgroup driver (required for Kubelet)
sudo sed -i 's/SystemdCgroup = false/SystemdCgroup = true/' /etc/containerd/config.toml

# Restart containerd
sudo systemctl restart containerd
sudo systemctl enable containerd

# Add GPG key
sudo mkdir -p /etc/apt/keyrings
curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.30/deb/Release.key | \
    sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg

# Add repo
echo "deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] \
https://pkgs.k8s.io/core:/stable:/v1.30/deb/ /" | \
    sudo tee /etc/apt/sources.list.d/kubernetes.list

# Update and install
sudo apt-get update
sudo apt-get install -y kubelet kubeadm kubectl
sudo apt-mark hold kubelet kubeadm kubectl


# Initialize Kubernetes on the master node
sudo kubeadm init --pod-network-cidr=192.168.0.0/16

# run join command on worker nodes
# sudo kubeadm join <master-ip>:6443 --token <token> --discovery-token-ca-cert-hash sha256:<hash>

# set up kubectl for the master:
mkdir -p $HOME/.kube
sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
sudo chown $(id -u):$(id -g) $HOME/.kube/config

# Install Calico CNI plugin
# Why: Pods in Kubernetes need networking. CNI plugin enables Pod-to-Pod communication.
kubectl apply -f https://docs.projectcalico.org/manifests/calico.yaml

# run on master node.
kubectl label node worker1 node-role.kubernetes.io/worker=worker
kubectl label node worker2 node-role.kubernetes.io/worker=worker
